<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:hftl="http://hftl.org"
	xmlns:hf="http://xmlns.jcp.org/jsf/composite/tags"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:o="http://omnifaces.org/ui"
	xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
	xmlns:s="http://jboss.org/seam/faces">

	<o:importConstants type="org.meveo.model.crm.custom.CustomFieldMapKeyEnum" />
	<o:importConstants type="org.meveo.model.crm.custom.CustomFieldTypeEnum" />
	<o:importConstants type="org.meveo.model.crm.custom.CustomFieldMatrixColumn.CustomFieldColumnUseEnum" />
	<o:importConstants type="org.meveo.model.persistence.DBStorageType" />


	<c:set target="#{customFieldTemplateBean}" property="cetStorageDM" value="#{customEntityTemplateBean.availableStoragesDM}"/>

	<h:form id="fieldsForm">
		<p:panel width="100"
			header="#{messages['customizedEntities.fieldsAndActions']}"
			rendered="#{customEntityTemplateBean.cetPrefix!=null}">
			<p:treeTable id="fields" value="#{customEntityTemplateBean.fields}"
				var="entity" nodeVar="node" resizableColumns="true" liveResize="true">
				<p:column headerText="#{messages['BusinessEntity.code']}">
					<h:panelGroup styleClass="ui-icon ui-icon-play inlineIcon"
						rendered="#{node.type == 'action'}" />
					<h:outputText value="#{entity.code}"
						rendered="#{node.type == 'field' or node.type == 'action'}" />
					<h:panelGroup
						styleClass="ui-icon ui-icon-folder-collapsed inlineIcon"
						rendered="#{node.type == 'tab'}" />
					<h:panelGroup styleClass="ui-icon ui-icon-contact inlineIcon"
						rendered="#{node.type == 'fieldGroup'}" />
					<h:outputText value="#{entity.label}"
						rendered="#{node.type == 'tab' or node.type == 'fieldGroup'}" />
				</p:column>
				<p:column
					headerText="#{messages['customFieldTemplate.description']}"
					style="width: 7%">
					<h:outputText value="#{entity.description}"
						rendered="#{node.type == 'field'}" />
					<h:outputText value="#{entity.label}"
						rendered="#{node.type == 'action'}" size="50" maxlength="100"
						componentWidth="100" />
				</p:column>
				<p:column headerText="#{messages['customFieldTemplate.fieldType']}">
					<h:outputText value="#{messages[entity.fieldType.label]}"
						rendered="#{node.type == 'field' and entity.entityClazz == null}" />
					<h:link outcome="referenceCET" value="#{entity.referenceEntityClazzCetCode}" rendered="#{node.type == 'field' and entity.entityClazz != null and customFieldTemplateBean.getCetId(entity.entityClazz) != null}" target="_blank">
						<f:param name="entityClass" value="#{entity.referenceEntityClassName}" />
						<f:param name="cetId" value="#{customFieldTemplateBean.getCetId(entity.entityClazz)}" />
						<!--<f:param name="backView" value="customizedEntities" />-->
						<f:param name="cid" value="#{javax.enterprise.context.conversation.id}" />
					</h:link>
					<h:outputText value="#{entity.referenceEntityClazzCetCode}"
						rendered="#{node.type == 'field' and entity.entityClazz != null and customFieldTemplateBean.getCetId(entity.entityClazz) == null}" />
				</p:column>
				<p:column
					headerText="#{messages['customFieldTemplate.primitiveType']}">
					<h:outputText value="#{entity.primitiveType}"
						rendered="#{node.type == 'field' and entity.entityClazz != null}" />
				</p:column>
				<p:column
					headerText="#{messages['customFieldTemplate.storageType']}">
					<h:outputText value="#{messages[entity.storageType.label]}"
						rendered="#{node.type == 'field'}" />
				</p:column>
				<p:column
					headerText="#{messages['customFieldTemplate.fieldRequired']}">
					<h:outputText value="#{messages['commons.yes']}"
						rendered="#{node.type == 'field' and entity.valueRequired != null and entity.valueRequired.toString() == 'true'}" />
					<h:outputText value="#{messages['commons.no']}"
						rendered="#{node.type == 'field' and entity.valueRequired != null and entity.valueRequired.toString() == 'false'}" />
				</p:column>
				<p:column headerText="#{messages['customFieldTemplate.identifier']}">
					<h:outputText value="#{messages['commons.yes']}"
						rendered="#{node.type == 'field' and entity.identifier != null and entity.identifier.toString() == 'true'}" />
					<h:outputText value="#{messages['commons.no']}"
						rendered="#{node.type == 'field' and entity.identifier != null and entity.identifier.toString() == 'false'}" />
				</p:column>
				<p:column
					headerText="#{messages['customFieldTemplate.applicableOnEl.short']}">
					<h:outputText value="#{entity.applicableOnEl}"
						rendered="#{node.type == 'field' or node.type == 'action'}" />
				</p:column>
				<p:column headerText="#{messages['customFieldTemplate.summary']}">
					<h:outputText value="#{entity.summary}" rendered="#{node.type == 'field'}" />
				</p:column>
				<p:column
					headerText="#{messages['customFieldTemplate.versionable']}">
					<h:outputText value="#{messages['commons.yes']}"
						rendered="#{node.type == 'field' and entity.versionable != null and entity.versionable.toString() == 'true'}" />
					<h:outputText value="#{messages['commons.no']}"
						rendered="#{node.type == 'field' and entity.versionable != null and entity.versionable.toString() == 'false'}" />
				</p:column>
				<p:column headerText="#{messages['enableEntity.active']}">
					<h:outputText value="#{messages['commons.yes']}"
						rendered="#{(node.type == 'field' or node.type == 'action') and entity.active != null and entity.active.toString() == 'true'}" />
					<h:outputText value="#{messages['commons.no']}"
						rendered="#{(node.type == 'field' or node.type == 'action') and entity.active != null and entity.active.toString() == 'false'}" />
				</p:column>
				<p:column headerText="#{messages['commons.actions']}" width="12%">
					<h:panelGroup rendered="#{node.type == 'tab' and not node.isDisplayOnly()}">
						<p:tooltip for="editTabBtn" value="#{messages['commons.edit']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="editTabBtn" icon="ui-icon-document"
							oncomplete="PF('groupDialog').show()" update=":groupForm"
							action="#{customEntityTemplateBean.editFieldGrouping(node)}">
							<!--                             <f:setPropertyActionListener target="#{customEntityTemplateBean.selectedFieldGrouping}" value="#{node}" /> -->
						</p:commandButton>

						<p:tooltip for="addFieldGroupBtn"
							value="#{messages['customizedEntities.addFieldGroup']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="addFieldGroupBtn" icon="ui-icon-contact"
							action="#{customEntityTemplateBean.newFieldGroup(node)}"
							oncomplete="PF('groupDialog').show()" update=":groupForm" />

						<p:tooltip for="addFieldInTabBtn"
							value="#{messages['customizedEntities.addField']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="addFieldInTabBtn" icon="ui-icon-plus"
							oncomplete="PF('cftDialog').show()"
							actionListener="#{customFieldTemplateBean.newEntity(customEntityTemplateBean.cetPrefix)}"
							update=":cftForm">
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.backViewSave}"
								value="customizedEntity" />
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity.appliesTo}"
								value="#{customEntityTemplateBean.cetPrefix}" />
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity.guiPosition}"
								value="#{node.guiPositionForField}" />
						</p:commandButton>

						<p:tooltip for="addActionInTabBtn"
							value="#{messages['customizedEntities.addAction']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="addActionInTabBtn" icon="ui-icon-play"
							oncomplete="PF('actionDialog').show()"
							actionListener="#{entityCustomActionBean.newEntity()}"
							update=":actionForm">
							<f:setPropertyActionListener
								target="#{entityCustomActionBean.backViewSave}"
								value="customizedEntity" />
							<f:setPropertyActionListener
								target="#{entityCustomActionBean.entity.appliesTo}"
								value="#{customEntityTemplateBean.cetPrefix}" />
							<f:setPropertyActionListener
								target="#{entityCustomActionBean.entity.guiPosition}"
								value="#{node.guiPositionForAction}" />
						</p:commandButton>

						<p:tooltip for="deleteTablink"
							value="#{messages['commons.delete']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="deleteTablink" icon="ui-icon-trash"
							action="#{customEntityTemplateBean.removeFieldGrouping()}"
							update=":fieldsForm:fields"
							rendered="#{node.parent.childCount &gt; 1}">
							<f:setPropertyActionListener
								target="#{customEntityTemplateBean.selectedFieldGrouping}"
								value="#{node}" />
							<p:confirm header="#{messages['commons.confirmationHeader']}"
								message="#{messages['customizedEntities.confirmDeleteTab']}"
								icon="ui-icon-alert" />
						</p:commandButton>

						<p:tooltip for="moveUpTabBtn" value="#{messages['action.moveUp']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="moveUpTabBtn" icon="ui-icon-arrowthick-1-n"
							action="#{customEntityTemplateBean.moveUp(node)}"
							update=":fieldsForm:fields" rendered="#{node.canMoveUp()}" />

						<p:tooltip for="moveDownTabBtn"
							value="#{messages['action.moveDown']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="moveDownTabBtn" icon="ui-icon-arrowthick-1-s"
							action="#{customEntityTemplateBean.moveDown(node)}"
							update=":fieldsForm:fields" rendered="#{node.canMoveDown()}" />
					</h:panelGroup>

					<h:panelGroup rendered="#{node.type == 'fieldGroup' and not node.isDisplayOnly()}">
						<p:tooltip for="editFieldGroupBtn"
							value="#{messages['commons.edit']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="editFieldGroupBtn" icon="ui-icon-document"
							oncomplete="PF('groupDialog').show()" update=":groupForm"
							action="#{customEntityTemplateBean.editFieldGrouping(node)}">
							<!--                             <f:setPropertyActionListener target="#{customEntityTemplateBean.selectedFieldGrouping}" value="#{node}" /> -->
						</p:commandButton>

						<p:tooltip for="addFieldInFieldGroupBtn"
							value="#{messages['customizedEntities.addField']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="addFieldInFieldGroupBtn" icon="ui-icon-plus"
							oncomplete="PF('cftDialog').show()"
							actionListener="#{customFieldTemplateBean.newEntity()}"
							update=":cftForm">
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.backViewSave}"
								value="customizedEntity" />
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity.appliesTo}"
								value="#{customEntityTemplateBean.cetPrefix}" />
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity.guiPosition}"
								value="#{node.guiPositionForField}" />
						</p:commandButton>

						<p:tooltip for="deleteFieldGrouplink"
							value="#{messages['commons.delete']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="deleteFieldGrouplink" icon="ui-icon-trash"
							action="#{customEntityTemplateBean.removeFieldGrouping()}"
							update=":fieldsForm:fields">
							<f:setPropertyActionListener
								target="#{customEntityTemplateBean.selectedFieldGrouping}"
								value="#{node}" />
							<p:confirm header="#{messages['commons.confirmationHeader']}"
								message="#{messages['customizedEntities.confirmDeleteFieldGroup']}"
								icon="ui-icon-alert" />
						</p:commandButton>

						<p:tooltip for="moveUpFgBtn" value="#{messages['action.moveUp']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="moveUpFgBtn" icon="ui-icon-arrowthick-1-n"
							action="#{customEntityTemplateBean.moveUp(node)}"
							update=":fieldsForm:fields" rendered="#{node.canMoveUp()}" />

						<p:tooltip for="moveDownFgBtn"
							value="#{messages['action.moveDown']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="moveDownFgBtn" icon="ui-icon-arrowthick-1-s"
							action="#{customEntityTemplateBean.moveDown(node)}"
							update=":fieldsForm:fields" rendered="#{node.canMoveDown()}" />
					</h:panelGroup>

					<h:panelGroup rendered="#{node.type == 'field' and not node.isDisplayOnly()}">

						<p:tooltip for="editFieldBtn" value="#{messages['commons.edit']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton immediate="true" id="editFieldBtn"
							icon="ui-icon-document"
							oncomplete="PF('cftDialog').show(); return false;"
							action="#{customFieldTemplateBean.initEntity(entity.id)}"
							update=":cftDialog :cftForm">
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.backViewSave}"
								value="customizedEntity" />
						</p:commandButton>


						<p:commandButton id="enablelink" icon="ui-icon-circle-check"
							rendered="#{entity.disabled}"
							actionListener="#{customEntityTemplateBean.refreshFields}"
							action="#{customFieldTemplateBean.enable()}" update="@form">
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity}" value="#{entity}" />
							<p:confirm header="#{messages['commons.enable']}"
								message="#{messages['commons.confirmEnable']}" />
						</p:commandButton>
						<p:commandButton id="disablelink" icon="ui-icon-circle-close"
							rendered="#{not entity.disabled}"
							actionListener="#{customEntityTemplateBean.refreshFields}"
							action="#{customFieldTemplateBean.disable()}" update="@form">
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity}" value="#{entity}" />
							<p:confirm header="#{messages['commons.disable']}"
								message="#{messages['commons.confirmDisable']}" />
						</p:commandButton>

						<p:tooltip for="enablelink" value="#{messages['commons.enable']}"
							showEffect="slide" hideEffect="slide" />

						<p:tooltip for="disablelink"
							value="#{messages['commons.disable']}" showEffect="slide"
							hideEffect="slide" />

						<p:commandButton id="copylink" icon="ui-icon-copy"
							update=":copyCFTForm" oncomplete="PF('copyCFTDialog').show()">
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity}" value="#{entity}" />
						</p:commandButton>

						<p:tooltip for="copylink"
							value="#{messages['customFieldTemplate.copyCFT.action']}"
							showEffect="slide" hideEffect="slide" />


						<p:remoteCommand id="remoteDeleteButton"
							actionListener="#{customFieldTemplateBean.delete}"
							action="#{customEntityTemplateBean.removeField(node)}"
							name="fieldsDoDelete" update="@form" />
						<p:tooltip for="deletelink" value="#{messages['commons.delete']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="deletelink" icon="ui-icon-trash"
							oncomplete="fieldsDoDelete()">
							<f:setPropertyActionListener
								target="#{customFieldTemplateBean.entity}" value="#{entity}" />
							<p:confirm header="#{messages['commons.confirmationHeader']}"
								message="#{messages['commons.confirmDelete']}"
								icon="ui-icon-alert" />
						</p:commandButton>


						<p:tooltip for="moveUpFBtn" value="#{messages['action.moveUp']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="moveUpFBtn" icon="ui-icon-arrowthick-1-n"
							action="#{customEntityTemplateBean.moveUp(node)}"
							update=":fieldsForm:fields" 
							rendered="#{node.canMoveUp()}" />

						<p:tooltip for="moveDownFBtn"
							value="#{messages['action.moveDown']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="moveDownFBtn" icon="ui-icon-arrowthick-1-s"
							action="#{customEntityTemplateBean.moveDown(node)}"
							update=":fieldsForm:fields" 
							rendered="#{node.canMoveDown()}" />

					</h:panelGroup>


					<h:panelGroup rendered="#{node.type == 'action' and not node.isDisplayOnly()}">

						<p:tooltip for="editActionBtn" value="#{messages['commons.edit']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="editActionBtn" icon="ui-icon-document"
							oncomplete="PF('actionDialog').show()"
							action="#{entityCustomActionBean.initEntity(entity.id)}"
							update=":actionForm">
							<f:setPropertyActionListener
								target="#{entityCustomActionBean.backViewSave}"
								value="customizedEntity" />
						</p:commandButton>

						<p:commandButton id="enableActionlink" icon="ui-icon-circle-check"
							rendered="#{entity.disabled}"
							actionListener="#{customEntityTemplateBean.refreshActions}"
							action="#{entityCustomActionBean.enable()}" update="@form">
							<f:setPropertyActionListener
								target="#{entityCustomActionBean.entity}" value="#{entity}" />
							<p:confirm header="#{messages['commons.enable']}"
								message="#{messages['commons.confirmEnable']}" />
						</p:commandButton>
						<p:commandButton id="disableActionlink"
							icon="ui-icon-circle-close" rendered="#{not entity.disabled}"
							actionListener="#{customEntityTemplateBean.refreshActions}"
							action="#{entityCustomActionBean.disable()}" update="@form">
							<f:setPropertyActionListener
								target="#{entityCustomActionBean.entity}" value="#{entity}" />
							<p:confirm header="#{messages['commons.disable']}"
								message="#{messages['commons.confirmDisable']}" />
						</p:commandButton>

						<p:tooltip for="enableActionlink"
							value="#{messages['commons.enable']}" showEffect="slide"
							hideEffect="slide" />
						<p:tooltip for="disableActionlink"
							value="#{messages['commons.disable']}" showEffect="slide"
							hideEffect="slide" />

						<p:remoteCommand id="remoteDeleteActionButton"
							actionListener="#{entityCustomActionBean.delete}"
							action="#{customEntityTemplateBean.refreshFields}"
							name="actionsDoDelete" update="@form" />
						<p:tooltip for="deleteActionlink"
							value="#{messages['commons.delete']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="deleteActionlink" icon="ui-icon-trash"
							oncomplete="actionsDoDelete()">
							<f:setPropertyActionListener
								target="#{entityCustomActionBean.entity}" value="#{entity}" />
							<p:confirm header="#{messages['commons.confirmationHeader']}"
								message="#{messages['commons.confirmDelete']}"
								icon="ui-icon-alert" />
						</p:commandButton>

						<p:tooltip for="moveUpABtn" value="#{messages['action.moveUp']}"
							showEffect="slide" hideEffect="slide" />
						<p:commandButton id="moveUpABtn" icon="ui-icon-arrowthick-1-n"
							action="#{customEntityTemplateBean.moveUp(node)}"
							update=":fieldsForm:fields" 
							rendered="#{node.canMoveUp()}" />

						<p:tooltip for="moveDownABtn"
							value="#{messages['action.moveDown']}" showEffect="slide"
							hideEffect="slide" />
						<p:commandButton id="moveDownABtn" icon="ui-icon-arrowthick-1-s"
							action="#{customEntityTemplateBean.moveDown(node)}"
							update=":fieldsForm:fields" 
							rendered="#{node.canMoveDown()}" />

					</h:panelGroup>

				</p:column>
				<f:facet name="footer">
					<p:commandButton id="addTab"
						value="#{messages['customizedEntities.addNewTab']}"
						oncomplete="PF('groupDialog').show()"
						actionListener="#{customEntityTemplateBean.newTab()}"
						update=":groupForm">
					</p:commandButton>
					<p:commandButton id="addAction"
						value="#{messages['customizedEntities.addAction']}"
						oncomplete="PF('actionDialog').show()"
						actionListener="#{entityCustomActionBean.newEntity()}"
						update=":actionForm">
						<f:setPropertyActionListener
							target="#{entityCustomActionBean.backViewSave}"
							value="customizedEntity" />
						<f:setPropertyActionListener
							target="#{entityCustomActionBean.entity.appliesTo}"
							value="#{customEntityTemplateBean.cetPrefix}" />
					</p:commandButton>
					<!--                         <p:commandButton id="addlink" value="#{messages['customizedEntities.addNewField']}" oncomplete="PF('cftDialog').show()" -->
					<!--                             actionListener="#{customFieldTemplateBean.newEntity()}" update=":cftForm"> -->
					<!--                             <f:setPropertyActionListener target="#{customFieldTemplateBean.backViewSave}" value="customizedEntity" /> -->
					<!--                             <f:setPropertyActionListener target="#{customFieldTemplateBean.entity.appliesTo}" value="#{customEntityTemplateBean.cetPrefix}" /> -->
					<!--                         </p:commandButton> -->
				</f:facet>
			</p:treeTable>

			<!--  Field related confirmation widgets -->

			<p:confirmDialog id="confirmCanDeleteDialog"
				styleClass="confirm-dialog"
				message="#{messages['commons.confirmCanotDelete']}" header=""
				severity="alert" widgetVar="fieldsConfirmCanotDeleteWidget"
				appendTo="@(body)">
				<p:panel styleClass="confirm-dialog-content">
					<p:commandButton id="canotdeleteOk"
						value="#{messages['commons.ok']}"
						oncomplete="PF('fieldsConfirmCanotDeleteWidget').hide()"
						update="@this" />
				</p:panel>
			</p:confirmDialog>

			<!-- Action related widgets -->
			<p:remoteCommand id="remoteDeleteActionButton"
				actionListener="#{entityCustomActionBean.delete}"
				action="#{customEntityTemplateBean.refreshActions}"
				name="actionsDoDelete" update="@form" />
		</p:panel>

	</h:form>


	<p:dialog id="copyCFTDialog"
		header="#{messages['customFieldTemplate.copyCFT.header']}"
		modal="true" closeOnEscape="true" widgetVar="copyCFTDialog"
		width="50%" closable="false" appendTo="@(body)">

		<hftl:decorateFormPanel formId="copyCFTForm">
			<ui:define name="fields">
				<hftl:decorateFormField fieldId="fieldToCopy"
					label="#{messages['customFieldTemplate.copyCFT.fieldToCopy']}">
					<h:outputText id="fieldToCopy"
						value="#{customFieldTemplateBean.entity.descriptionAndCode}"
						styleClass="field-value" />
				</hftl:decorateFormField>

				<hftl:decorateFormField fieldId="copyCftTo"
					label="#{messages['customFieldTemplate.copyCFT.target']}">
					<p:autoComplete id="copyCftTo"
						value="#{customFieldTemplateBean.copyCftTo}"
						completeMethod="#{customFieldTemplateBean.autocompleteClassNamesHuman}"
						converter="customFieldAppliesToConverter" required="true"
						size="50" dropdown="true" dropdownMode="current" />
				</hftl:decorateFormField>
			</ui:define>
			<ui:define name="buttons">
				<p:commandButton
					value="#{messages['customFieldTemplate.copyCFT.action']}"
					action="#{customFieldTemplateBean.copyCFT}"
					update="@form :cftForm:messages"
					oncomplete="if (args &amp;&amp; !args.validationFailed){PF('copyCFTDialog').hide();}"
					ajax="true" />
				<p:button value="#{messages['action.cancel']}"
					onclick="PF('copyCFTDialog').hide(); return false;" />
			</ui:define>
		</hftl:decorateFormPanel>
	</p:dialog>

	<p:dialog id="groupDialog"
		header="#{messages['customizedEntities.groupDialogHeader']}"
		modal="true" closeOnEscape="false" widgetVar="groupDialog" width="50%"
		closable="false" appendTo="@(body)">

		<hftl:decorateFormPanel formId="groupForm"
			label="#{messages['customizedEntities.'.concat(customEntityTemplateBean.selectedFieldGrouping.type).concat('DialogHeader')]}">
			<ui:define name="fields">
				<hftl:decorateFormField fieldId="parentName"
					label="#{messages['customizedEntities.parentTabTitle']}"
					rendered="#{customEntityTemplateBean.selectedFieldGrouping.parent!=null and customEntityTemplateBean.selectedFieldGrouping.parent.type!='root'}">
					<h:outputText id="parentName"
						value="#{customEntityTemplateBean.selectedFieldGrouping.parent.data.label}"
						styleClass="field-value" />
				</hftl:decorateFormField>

				<hftl:formLanguageFields
					label="#{messages['customizedEntities.title']}" field="label"
					entity="#{customEntityTemplateBean.selectedFieldGroupingLabel}"
					required="true" size="50" maxlength="50" componentWidth="100" />

			</ui:define>
			<ui:define name="buttons">
				<p:commandButton value="#{messages['action.save']}"
					action="#{customEntityTemplateBean.saveUpdateFieldGrouping}"
					update="@form :fieldsForm:fields"
					oncomplete="if (args &amp;&amp; !args.validationFailed){PF('groupDialog').hide();}" />
				<p:commandButton value="#{messages['action.cancel']}"
					action="#{customEntityTemplateBean.cancelFieldGrouping}"
					oncomplete="PF('groupDialog').hide()" update=":fieldsForm:fields"
					immediate="true" />
			</ui:define>
		</hftl:decorateFormPanel>
	</p:dialog>


	<p:dialog id="cftDialog" 
		modal="true" 
		closeOnEscape="true" 
		widgetVar="cftDialog" 
		width="95%"
		responsive="true"
		appendTo="@(body)" 
		maximizable = "true">

		<p:scrollPanel mode="native">
			<hftl:formPanel formId="cftForm"
				label="#{messages['customFieldTemplate.panel']}"
				backingBean="#{customFieldTemplateBean}" showFormButtons="false">
				<f:event
					listener="#{customFieldTemplateBean.validateMatrixColumns(customFieldTemplateBean.entity)}"
					type="postValidate" />

				<h:panelGrid columns="2"
					columnClasses="Wid40 Responsive100 VAlignTop, Wid60 Responsive100 VAlignTop">
					<h:panelGroup>
						<hftl:formField label="#{messages['BusinessEntity.code']}"
							field="code" required="true" allowEdit="false"
							componentWidth="100" size="56"/>
						<hftl:formField
							label="#{messages['customFieldTemplate.description']}"
							field="description" required="true" size="56" maxlength="100"
							componentWidth="100" />
						<hftl:formField
							label="#{messages['customFieldTemplate.identifier']}"
							field="identifier" isMessage="true" componentWidth="8"
							allowEdit="false" actionListenerBean="#{customFieldTemplateBean}"
							listenerUpdate="@this relationshipPanel defaultValueField entityClazzField validations versioning storageType_enum matrixColumns childEntityFields listValuesField fieldTypeId"
							actionListenerMethod="resetFieldType" />
					</h:panelGroup>

					<h:panelGroup>
						<h:panelGroup id="fieldTypeId">
							<hftl:formField
								label="#{messages['customFieldTemplate.fieldType']}"
								field="fieldType" required="true" componentWidth="30" actionListenerBean="#{customFieldTemplateBean}"
								actionListenerMethod="updateDefaultValues" allowEdit="false"
								listenerUpdate="binaryCFT listValuesField relationshipPanel defaultValueField entityClazzField validations versioning storageType_enum matrixColumns childEntityFields displayFormat storageType storages"
								onEventComplete="PF('cftDialog').initPosition()"
								rendered="#{customFieldTemplateBean.entity.id != null or customFieldTemplateBean.entity.identifier ==false}" />
								
							<hftl:decorateFormField fieldId="fieldType" field="fieldType"
								label="#{messages['customFieldTemplate.fieldType']}"
								required="true" displayOneLine="false"
								rendered="#{customFieldTemplateBean.entity.id == null and customFieldTemplateBean.entity.identifier == true}">
								<p:selectOneMenu id="fieldType"
									value="#{customFieldTemplateBean.fieldType}" required="true">
									<f:selectItem itemLabel="" />
									<f:selectItems
										value="#{customFieldTemplateBean.identifierFieldTypes}"
										var="enumElement" itemValue="#{enumElement}"
										itemLabel="#{messages[enumElement.label]}" />
									<f:converter converterId="enumConverter" />
									<f:attribute name="GenericEnumConverter.enumType"
										value="CustomFieldTypeEnum" />
									<p:ajax
										update="listValuesField relationshipPanel defaultValueField entityClazzField validations versioning storageType_enum matrixColumns childEntityFields storageType storages"
										listener="#{customFieldTemplateBean.updateDefaultValues}"
										event="change" />
								</p:selectOneMenu>
							</hftl:decorateFormField>
						</h:panelGroup>
						<h:panelGroup id="storageType">
							<hftl:formField
								label="#{messages['customFieldTemplate.storageType']}"
								field="storageType" required="true" componentWidth="30" disabled="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.MULTI_VALUE}"
								actionListenerBean="#{customFieldTemplateBean}" allowEdit="false"
								listenerUpdate="defaultValueField mapKeyTypeField matrixColumns storageType"
								actionListenerMethod="updateDefaultValues" />
						</h:panelGroup>
						<h:panelGroup id="mapKeyTypeField">
							<hftl:formField
								label="#{messages['customFieldTemplate.mapKeyType']}"
								field="mapKeyType" required="true" componentWidth="30"
								listValues="#{CustomFieldMapKeyEnum.enumValuesForKey}"
								rendered="#{customFieldTemplateBean.entity.storageType == 'MAP'}" />
						</h:panelGroup>
						<h:panelGroup id="defaultValueField">
							<hftl:formField
								label="#{messages['customFieldTemplate.defaultValue']}"
								field="defaultValue" componentWidth="60" size="55"
								rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.DATE and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.ENTITY and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY and customFieldTemplateBean.entity.storageType == 'SINGLE'}"
								newLine="true" />
							<hftl:formField
								label="#{messages['customFieldTemplate.useInheritedAsDefaultValue']}"
								field="useInheritedAsDefaultValue" componentWidth="40"
								rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.DATE and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.ENTITY and customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY and customFieldTemplateBean.entity.storageType == 'SINGLE'}" />
						</h:panelGroup>
						<hftl:formField label="#{messages['customFieldTemplate.tags']}"
							field="tags" componentWidth="100" textArea="true"
							maxlength="2000" rows="1" />
						<h:panelGroup id="entityClazzField">
							<hftl:formField
								label="#{messages['entity.notification.classNameFilter']}"
								field="entityClazz" required="true" size="90" maxlength="255"
								autocompleteBean="#{customFieldTemplateBean}"
								isAutocomplete="true"
								autocompleteMethod="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CHILD_ENTITY?'autocompleteClassNamesCEIOnly':'autocompleteClassNames'}"
								newLine="true" componentWidth="100"
								listenerUpdate="childEntityFields relationshipPanel"
								actionListenerBean="#{customFieldTemplateBean}"
								actionListenerMethod="resetChildEntityFields"
								rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.ENTITY or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CHILD_ENTITY}" />
						</h:panelGroup>
						<h:panelGroup id="relationshipPanel">
						
							<hftl:decorateFormField
								label="#{messages['customFieldTemplate.relationshipCode']}"
								fieldId="relationship"
								field="relationship" required="true" componentWidth="100"
								rendered="#{customFieldTemplateBean.storagesDM.target.contains(DBStorageType.NEO4J) and customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.ENTITY and not empty customFieldTemplateBean.entity.entityClazz}">
							
								<p:selectOneMenu id="relationship"
									value="#{customFieldTemplateBean.entity.relationship}" required="true">
									<f:selectItems
										value="#{customFieldTemplateBean.availableRelationships}"
										var="elem" itemValue="#{elem}"
										itemLabel="#{elem.code}" />
									<hftl:objectConverter/>
								</p:selectOneMenu>
								
								<p:commandButton value="+" oncomplete="PF('createRelationshipDialog').show();"/>
									
							</hftl:decorateFormField>
							
							<hftl:formField label="#{messages['customFieldTemplate.relationshipName']}"
								field="relationshipName"
								required="true"
								rendered="#{customFieldTemplateBean.storagesDM.target.contains(DBStorageType.NEO4J) and customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.BINARY}" />
								
						</h:panelGroup>
						<h:panelGroup id="displayFormat">
							<hftl:formField
									label="#{messages['customFieldTemplate.displayFormat']}"
									field="displayFormat" required="true" componentWidth="30"
									rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DATE}" />
						</h:panelGroup>
					</h:panelGroup>
				</h:panelGrid>
				<h:panelGroup id="childEntityFields" styleClass="clearLeft">
					<p:fieldset
						legend="#{messages['customFieldTemplate.childEntity.fieldset']}"
						styleClass="clearLeft"
						rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.CHILD_ENTITY and customFieldTemplateBean.entity.entityClazzCetCode!=null}">
						<hftl:decorateFormField fieldId="cheFields" required="true" label="#{messages['customFieldTemplate.childEntity.fields']}">
							<p:pickList id="cheFields"
								value="#{customFieldTemplateBean.childEntityFieldListModel}"
								required="true" var="item" itemLabel="#{item.label}"
								itemValue="#{item}">
							    <o:converter converterId="omnifaces.ListConverter" list="#{customFieldTemplateBean.childEntityFieldList}" />
							</p:pickList>
						</hftl:decorateFormField>
					</p:fieldset>
				</h:panelGroup>
				<h:panelGroup id="matrixColumns" styleClass="clearfix">
					<p:fieldset
						legend="#{messages['customFieldTemplate.matrixColumn.columns']}"
						styleClass="clearLeft"
						rendered="#{customFieldTemplateBean.entity.storageType == 'MATRIX'}">
						<p:dataTable editable="true" editMode="cell"
							value="#{customFieldTemplateBean.entity.matrixColumns}"
							var="matrixColumn" style="width: 850px"
							sortBy="#{matrixColumn.columnUse}">
							<!--<p:ajax event="cellEdit" update=":cftForm:matrixColumns"-->
								<!--partialSubmit="true" />-->
							<p:headerRow>
		                                <p:column
									colspan="#{customFieldTemplateBean.edit?5:4}">
		                                    <h:outputText
										value="#{messages['customFieldTemplate.matrixColumn.columnUse.'.concat(matrixColumn.columnUse)]}" />
		                                </p:column>
		                            </p:headerRow>

							<p:column
								headerText="#{messages['customFieldTemplate.matrixColumn.position']}"
								width="50">
								<h:outputText value="#{matrixColumn.position}"
									styleClass="field-value" />
							</p:column>
							<p:column headerText="#{messages['BusinessEntity.code']}"
								width="150">
								<p:cellEditor>
									<f:facet name="output">
										<h:outputText value="#{matrixColumn.code}"
											styleClass="field-value" />
									</f:facet>
									<f:facet name="input">
										<h:inputText value="#{matrixColumn.code}" required="true"
											size="20" maxlength="20" />
									</f:facet>
								</p:cellEditor>
							</p:column>
							<p:column
								headerText="#{messages['customFieldTemplate.matrixColumn.label']}"
								width="300">
								<p:cellEditor>
									<f:facet name="output">
										<h:outputText value="#{matrixColumn.label}"
											styleClass="field-value" />
									</f:facet>
									<f:facet name="input">
										<h:inputText value="#{matrixColumn.label}" required="true"
											size="50" maxlength="50" />
									</f:facet>
								</p:cellEditor>
							</p:column>
							<p:column
								headerText="#{messages['customFieldTemplate.matrixColumn.keyType']}"
								width="150">
								<p:cellEditor>
									<f:facet name="output">
										<h:outputText value="#{messages[matrixColumn.keyType.label]}"
											styleClass="field-value" />
									</f:facet>
									<f:facet name="input">
										<h:selectOneMenu value="#{matrixColumn.keyType}"
											required="true">
											<f:converter converterId="enumConverter" />
											<f:attribute name="GenericEnumConverter.enumType"
												value="org.meveo.model.crm.custom.CustomFieldMapKeyEnum" />
											<f:selectItem />
											<f:selectItems
												value="#{matrixColumn.columnUse == CustomFieldColumnUseEnum.USE_KEY? CustomFieldMapKeyEnum.enumValuesForKey:CustomFieldMapKeyEnum.enumValuesForValue}"
												var="item" itemValue="#{item}"
												itemLabel="#{messages[item.label]}" />
										</h:selectOneMenu>
									</f:facet>
								</p:cellEditor>
							</p:column>

							<c:if test="#{customFieldTemplateBean.edit}">
								<p:column width="50">
									<p:tooltip for="deletelink"
										value="#{messages['commons.delete']}" showEffect="slide"
										hideEffect="slide" />
									<p:commandButton id="deletelink"
										action="#{customFieldTemplateBean.entity.removeMatrixColumn(matrixColumn)}"
										partialSubmit="true" icon="ui-icon-trash" process="@this"
										update=":cftForm:matrixColumns">
									</p:commandButton>
								</p:column>
							</c:if>
							<c:if test="#{customFieldTemplateBean.edit}">
								<f:facet name="footer" layout="block">
									<p:commandButton
										value="#{messages['customFieldTemplate.addKeyColumn']}"
										partialSubmit="true" process="@this"
										update=":cftForm:matrixColumns"
										action="#{customFieldTemplateBean.entity.addMatrixKeyColumn()}" />
									<p:commandButton
										value="#{messages['customFieldTemplate.addValueColumn']}"
										partialSubmit="true" process="@this"
										update=":cftForm:matrixColumns"
										action="#{customFieldTemplateBean.entity.addMatrixValueColumn()}"
										rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.MULTI_VALUE}" />
								</f:facet>
							</c:if>
						</p:dataTable>
					</p:fieldset>
				</h:panelGroup>

				<p:fieldset id="validations"
					legend="#{messages['customFieldTemplate.validations']}"
					styleClass="validations clearfix">
					<hftl:formField
						label="#{messages['customFieldTemplate.fieldRequired']}"
						field="valueRequired" isMessage="true" componentWidth="10" />
					<hftl:formField
						label="#{messages['customFieldTemplate.hideOnNew']}"
						field="hideOnNew" isMessage="true" componentWidth="8" />
					<hftl:formField label="#{messages['customFieldTemplate.unique']}"
						field="unique" isMessage="true" componentWidth="8" />
					<hftl:formField
						label="#{messages['customFieldTemplate.allowEdit']}"
						field="allowEdit" isMessage="true" componentWidth="7" />
					<hftl:formField
						label="#{messages['customFieldTemplate.applicableOnEl']}"
						field="applicableOnEl" textArea="true" maxlength="2000" rows="1" />
					<hftl:formField label="#{messages['customFieldTemplate.minValue']}"
						field="minValue" negativeValue="true" componentWidth="15"
						rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.LONG or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DOUBLE}" />
					<hftl:formField
						label="#{messages[customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING?'customFieldTemplate.maxValueTxt':'customFieldTemplate.maxValue']}"
						field="maxValue"
						required="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING}"
						negativeValue="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.STRING}"
						rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.LONG or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.DOUBLE or customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING}"
						componentWidth="15" />
					<hftl:formField label="#{messages['customFieldTemplate.regExp']}"
						field="regExp"
						rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.STRING}"
						size="29" componentWidth="19" />
				</p:fieldset>

				<p:outputPanel id="binaryCFT">
					<p:fieldset legend="#{messages['CustomFieldTypeEnum.BINARY']}"
						styleClass="clearfix" rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.BINARY}">

						<p:panel styleClass="Container50">
							<p:outputPanel id="contentTypesListPanel">
							    <p:dataTable value="#{customFieldTemplateBean.entity.contentTypes}" var="e">
						            <p:column headerText="#{messages['customFieldTemplate.contentTypes']}">
						                <h:outputText value="#{e}" />
						            </p:column>
						            <p:column headerText="#{messages['commons.actions']}">
						            	<p:commandLink value="#{messages['action.remove']}" update=":#{p:component('contentTypesListPanel')}" process=":#{p:component('contentTypesListPanel')}">
						                    <p:collector value="#{e}" removeFrom="#{customFieldTemplateBean.entity.contentTypes}" unique="true"/>
						                </p:commandLink>
						            </p:column>
	            				</p:dataTable>
							</p:outputPanel>

							<p:panel id="contentTypeForm">
								<hftl:decorateFormField fieldId="contentType" label="#{messages['customFieldTemplate.contentTypes']}">
									<p:inputText id="contentType" value="#{customFieldTemplateBean.entity.contentType}"></p:inputText>
								</hftl:decorateFormField>
								<p:panel styleClass="form-panel-actions">
									<p:commandButton value="#{messages['action.clear']}" actionListener="#{customFieldTemplateBean.clearContentType}" update="contentTypeForm" process="contentTypeForm" />
						            <p:commandButton value="#{messages['action.add']}" action="#{customFieldTemplateBean.reinitContentType}" process="contentTypeForm" update="messages contentType contentTypesListPanel">
						                <p:collector value="#{customFieldTemplateBean.entity.contentType}" addTo="#{customFieldTemplateBean.entity.contentTypes}" unique="true"/>
						            </p:commandButton>
					            </p:panel>
							</p:panel>
						</p:panel>

						<p:panel styleClass="Container50">
							<p:outputPanel id="fileExtensionPanel">
							    <p:dataTable value="#{customFieldTemplateBean.entity.fileExtensions}" var="e">
						            <p:column headerText="#{messages['customFieldTemplate.fileExtensions']}">
						                <h:outputText value="#{e}" />
						            </p:column>
						            <p:column headerText="#{messages['commons.actions']}">
						            	<p:commandLink value="#{messages['action.remove']}" update=":#{p:component('fileExtensionPanel')}" process=":#{p:component('fileExtensionPanel')}">
						                    <p:collector value="#{e}" removeFrom="#{customFieldTemplateBean.entity.fileExtensions}" unique="true"/>
						                </p:commandLink>
						            </p:column>
	            				</p:dataTable>
							</p:outputPanel>

							<p:panel id="fileExtensionForm">
								<hftl:decorateFormField fieldId="fileExtension" label="#{messages['customFieldTemplate.fileExtensions']}">
									<p:inputText id="fileExtension" value="#{customFieldTemplateBean.entity.fileExtension}"></p:inputText>
								</hftl:decorateFormField>
								<p:panel styleClass="form-panel-actions">
									<p:commandButton value="#{messages['action.clear']}" actionListener="#{customFieldTemplateBean.clearFileExtension}" update="fileExtensionForm" process="fileExtensionForm" />
						            <p:commandButton value="#{messages['action.add']}" action="#{customFieldTemplateBean.reinitFileExtension}" process="fileExtensionForm" update="messages fileExtension fileExtensionPanel">
						                <p:collector value="#{customFieldTemplateBean.entity.fileExtension}" addTo="#{customFieldTemplateBean.entity.fileExtensions}" unique="true"/>
						            </p:commandButton>
					            </p:panel>
							</p:panel>
						</p:panel>

						<hftl:formField newLine="true"
							label="#{messages['customFieldTemplate.maximumSize']}"
							field="maxFileSizeAllowedInKb" />

						<hftl:formField
							label="#{messages['customFieldTemplate.filePath']}"
							field="filePath" />

						<hftl:formField label="#{messages['binary.showOnExplorer']}" field="saveOnExplorer" />
					</p:fieldset>
				</p:outputPanel>

				<h:panelGrid columns ="2" width="100%" columnClasses="Wid40 Responsive100 VAlignTop, Wid60 Responsive100 VAlignTop">
					<h:panelGrid columns = "1">
						<p:fieldset
							legend="#{messages['customFieldTemplate.versioningAndCaching']}"
							styleClass="clearfix versioning-and-caching">
							<h:panelGrid columns = "1">
								<hftl:formField
									label="#{messages['customFieldTemplate.indexType']}"
									field="indexType" required="false"
									allowEdit="#{customFieldTemplateBean.entity.indexType==null}"
									componentWidth="10" />
								<h:panelGrid columns = "3">
									<hftl:formField label="#{messages['customFieldTemplate.filter']}"
										field="filter" isMessage="true" componentWidth="8" />
									<hftl:formField label="#{messages['customFieldTemplate.summary']}"
										field="summary" isMessage="true" componentWidth="8" />
									<h:panelGroup id="versioning">
										<hftl:formField
											label="#{messages['customFieldTemplate.versionable']}"
											field="versionable" isMessage="true" allowEdit="true"
											componentWidth="15" listenerUpdate=":cftForm:versionableFields"
											rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY}" />
										<h:panelGroup id="versionableFields"
											rendered="#{customFieldTemplateBean.entity.fieldType != CustomFieldTypeEnum.CHILD_ENTITY}">
											<hftl:formField
												label="#{messages['customFieldTemplate.cacheTimeperiod']}"
												field="cacheValueTimeperiod"
												rendered="#{customFieldTemplateBean.entity.versionable}"
												componentWidth="30" />
											<hftl:formField
												label="#{messages['customFieldTemplate.triggerEndPeriodEvent']}"
												field="triggerEndPeriodEvent"
												rendered="#{customFieldTemplateBean.entity.versionable}"
												componentWidth="15" />
										</h:panelGroup>
									</h:panelGroup>
									<p:outputPanel id="auditedPanel">
										<hftl:formField label="#{messages['customizedEntities.audited']}" id="audited" field="audited" />
										<hftl:formField label="#{messages['customizedEntities.persisted']}" id="persisted" field="persisted" />
									</p:outputPanel>
								</h:panelGrid>
							</h:panelGrid>
						</p:fieldset>
						<h:panelGroup id="listValuesField">
							<p:fieldset legend="#{messages['customFieldTemplate.listValues']}"
								styleClass="clearLeft"
								rendered="#{customFieldTemplateBean.entity.fieldType == CustomFieldTypeEnum.LIST}">
								<hftl:formField
									label="#{messages['customFieldTemplate.listValues']}"
									field="listValues" mapKeyLabel="#{messages['commons.value']}"
									mapValueLabel="#{messages['commons.label']}" componentWidth="75"
									newLine="true" />
							</p:fieldset>
						</h:panelGroup>
						<h:panelGrid columns = "2">
							<hftl:formField label="#{messages['enableEntity.disabled']}"
								doNotShowOnNew="true" allowEdit="false" field="disabled"
								isMessage="true" newLine="true" />
							<hftl:decorateFormField label="#{messages['meveoModule.partOfModules']}"
								rendered="#{!customFieldTemplateBean.entity.transient}">
								<h:outputText value="#{customFieldTemplateBean.partOfModules}" />
							</hftl:decorateFormField>
						</h:panelGrid>
					</h:panelGrid>
					<h:panelGroup id="storages">
						<hftl:decorateFormField componentWidth="100%" label="#{messages['customFieldTemplate.storages']}">
							<p:pickList id="pickList" value="#{customFieldTemplateBean.storagesDM}" var="item" itemLabel="#{item}" itemValue="#{item}">
								<p:ajax event="transfer" listener="#{customFieldTemplateBean.onChangeAvailableStorages()}" update="relationshipPanel"/>
								<o:converter converterId="omnifaces.ListConverter" list="#{customFieldTemplateBean.storageTypesList}" />
							</p:pickList>
						</hftl:decorateFormField>
					</h:panelGroup>
				</h:panelGrid>
				<p:fieldset id="samples" toggleable="true" collapsed="true" legend="Sample">
					<h:panelGroup id="listOfExample">
						<hftl:formField label="#{messages['customFieldTemplate.sample']}"
										field="samples" textArea="true" rows="3" maxlength="200000"/>
					</h:panelGroup>
				</p:fieldset>
				<ui:param name="buttons" value="true" />
				<ui:define name="buttons">
					<p:remoteCommand action="#{customEntityTemplateBean.refreshFields}"
						name="refreshFields" update=":fieldsForm:fields" />
					<p:commandButton value="#{messages['action.save']}"
						onclick="delayDisable(this);"
						oncomplete="if (args &amp;&amp; !args.validationFailed){refreshFields();PF('cftDialog').hide();}"
						actionListener="#{customFieldTemplateBean.saveOrUpdateForPopup}"
						icon="ui-icon-check" process="@form" update="@form">
						<f:param name="edit" value="true" />
					</p:commandButton>
					<p:commandButton value="#{messages['commons.disable']}"
						rendered="#{not empty customFieldTemplateBean.entity.id and customFieldTemplateBean.entity.active}"
						oncomplete="refreshFields()"
						action="#{customFieldTemplateBean.disable}" update="@form">
						<p:confirm header="#{messages['commons.disable']}"
							message="#{messages['commons.confirmDisable']}" />
					</p:commandButton>

					<p:commandButton value="#{messages['commons.enable']}"
						rendered="#{not empty customFieldTemplateBean.entity.id and customFieldTemplateBean.entity.disabled}"
						oncomplete="refreshFields()"
						action="#{customFieldTemplateBean.enable}" update="@form">
						<p:confirm header="#{messages['commons.enable']}"
							message="#{messages['commons.confirmEnable']}" />
					</p:commandButton>
					<p:commandButton id="deleteButton" icon="ui-icon-trash"
						value="#{messages['commons.delete']}"
						action="#{customFieldTemplateBean.delete}"
						rendered="#{customFieldTemplateBean.entity.id!=null and customFieldTemplateBean.canUserUpdateEntity()}"
						oncomplete="if (args &amp;&amp; !args.validationFailed){refreshFields();PF('cftDialog').hide();}">
						<p:confirm header="#{messages['commons.confirmationHeader']}"
							message="#{messages['commons.confirmDelete']}"
							icon="ui-icon-alert" />
					</p:commandButton>

					<p:commandButton id="copyButton" icon="ui-icon-copy"
						value="#{messages['customFieldTemplate.copyCFT.action']}"
						rendered="#{customFieldTemplateBean.entity.id!=null and customFieldTemplateBean.canUserUpdateEntity()}"
						oncomplete="PF('copyCFTDialog').show()" update=":copyCFTForm">
					</p:commandButton>

					<p:commandButton value="#{messages['commons.close']}"
						onclick="PF('cftDialog').hide()" type="button" process="@this" />

				</ui:define>

			</hftl:formPanel>
		</p:scrollPanel>
	</p:dialog>



	<p:dialog id="actionDialog"
		header="#{messages['customizedEntities.actionHeader']}" modal="true"
		closeOnEscape="true" maximizable="true" widgetVar="actionDialog"
		width="90%" appendTo="@(body)">

		<hftl:formPanel formId="actionForm"
			label="#{messages['customizedEntities.actionHeader']}"
			backingBean="#{entityCustomActionBean}" showFormButtons="false">

			<h:panelGrid columns="2"
				columnClasses="Wid40 Responsive100 VAlignTop, Wid60 Responsive100 VAlignTop">
				<h:panelGroup>
					<hftl:formField label="#{messages['BusinessEntity.code']}"
						field="code" required="true" allowEdit="false"
						componentWidth="100" size="56" />
					<hftl:formLanguageFields
						label="#{messages['customizedEntities.actionLabel']}"
						field="label" required="true" size="50" maxlength="50"
						componentWidth="100" />	
					<hftl:formField label="#{messages['customizedEntities.applicableToEntityList']}" field="applicableToEntityList" />
					<hftl:formField label="#{messages['customizedEntities.applicableToEntityInstance']}" field="applicableToEntityInstance" />					
				</h:panelGroup>
				
				<h:panelGroup>
					<hftl:formField label="#{messages['BusinessEntity.description']}"
						field="description" useConverter="false" maxlength="50"
						componentWidth="100" />
					<!--                     <hftl:formField label="#{messages['entityCustomAction.guiPosition']}" field="guiPosition" /> -->
					<hftl:formField
						label="#{messages['customizedEntities.actionApplicableOnEl']}"
						field="applicableOnEl" componentWidth="50" textArea="true"
						maxlength="2000" rows="1" />
					
					<hftl:formField id="script"
						label="#{messages['customizedEntities.actionScript']}"
						field="script" valueLabelField="code" newLine="true"
						listenerUpdate="scriptParameters"
						componentWidth="100" popup="true" popupId="actionScriptPopup"
						createEditPopup="true" createEditPopupId="scriptDialog"
						createEditPopupListenerBean="#{entityCustomActionBean}"
						createEditPopupListenerViewMethod="viewEditScript"
						createEditPopupListenerNewMethod="newScript"
						createEditPopupListenerUpdate=":scriptForm" required="true" />
						
					<hftl:functionParamsForm id="scriptParameters"
                    	value="#{entityCustomActionBean.entity.scriptParameters}"
                    	script="#{entityCustomActionBean.entity.script}"
                   		componentWidth="100"/>

					<hftl:formField label="#{messages['enableEntity.disabled']}"
						doNotShowOnNew="true" allowEdit="false" field="disabled"
						isMessage="true" newLine="true" />
				</h:panelGroup>
			</h:panelGrid>
			<ui:param name="buttons" value="true" />
			<ui:define name="buttons">
				<!--<hf:formButtons backingBean="#{entityCustomActionBean}"-->
				<!--showBackButton="false" ajaxSubmit="true"-->
				<!--submitUpdate="@form :fieldsForm:fields" edit="true"-->
				<!--killConversationOnSave="false">-->
				<p:remoteCommand action="#{customEntityTemplateBean.refreshFields}"
								 name="refreshFields" update=":fieldsForm:fields"/>
				<p:commandButton value="#{messages['action.save']}"
								 onclick="delayDisable(this);"
								 oncomplete="if (args &amp;&amp; !args.validationFailed){refreshFields();PF('actionDialog').hide();}"
								 actionListener="#{entityCustomActionBean.saveOrUpdateForPopup}"
								 icon="ui-icon-check" process="@form" update="@form">
					<f:param name="edit" value="true"/>
				</p:commandButton>
				<p:commandButton value="#{messages['commons.disable']}"
								 rendered="#{not empty entityCustomActionBean.entity.id and entityCustomActionBean.entity.active}"
								 actionListener="#{customEntityTemplateBean.refreshFields}"
								 action="#{entityCustomActionBean.disable}"
								 update="@form :fieldsForm:fields">
					<p:confirm header="#{messages['commons.disable']}"
							   message="#{messages['commons.confirmDisable']}"/>
				</p:commandButton>

				<p:commandButton value="#{messages['commons.enable']}"
								 rendered="#{not empty entityCustomActionBean.entity.id and entityCustomActionBean.entity.disabled}"
								 actionListener="#{customEntityTemplateBean.refreshFields}"
								 action="#{entityCustomActionBean.enable}"
								 update="@form :fieldsForm:fields">
					<p:confirm header="#{messages['commons.enable']}"
							   message="#{messages['commons.confirmEnable']}"/>
				</p:commandButton>

				<p:commandButton value="#{messages['commons.close']}"
								 onclick="PF('actionDialog').hide()"
								 actionListener="#{customEntityTemplateBean.refreshFields}"
								 update=":fieldsForm:fields" process="@this"/>
				<hf:clearButton id="resetButtonCC" label="#{messages['action.reset']}"
								edit="true" rendered="#{entityCustomActionBean.canUserUpdateEntity()}"
								resetAction="#{entityCustomActionBean.resetFormEntity()}" includeViewParams="true"/>
				<p:commandButton icon="ui-icon-trash" value="#{messages['commons.delete']}"
								 actionListener="#{customEntityTemplateBean.refreshFields}"
								 action="#{entityCustomActionBean.delete}" immediate="true" update=":fieldsForm:fields"
								 rendered="#{entityCustomActionBean.entity.id!=null and entityCustomActionBean.canUserUpdateEntity()}">
					<p:confirm header="#{messages['commons.confirmationHeader']}"
							   message="#{messages['commons.confirmDelete']}" icon="ui-icon-alert"/>
					<f:ajax render="@all"/>
				</p:commandButton>
				<!--</hf:formButtons>-->
			</ui:define>
		</hftl:formPanel>
	</p:dialog>

	<hftl:entityPopup id="actionScriptPopup"
		header="#{messages['scriptInstance.search']}"
		backingBean="#{scriptInstanceListBean}"
		searchField1Label="#{messages['BusinessEntity.code']}"
		searchField1="code"
		searchField2Label="#{messages['BusinessEntity.description']}"
		searchField2="description"
		column1Label="#{messages['BusinessEntity.code']}" column1="code"
		column2Label="#{messages['BusinessEntity.description']}"
		column2="description"
		selection="#{entityCustomActionBean.entity.script}"
		updateField=":actionForm:script_entity :actionForm:scriptParameters">
	</hftl:entityPopup>



	<p:dialog id="scriptDialog"
		header="#{messages['customizedEntities.actionScriptHeader']}"
		modal="true" closeOnEscape="false" maximizable="true" closable="false"
		widgetVar="scriptDialog" width="90%" height="550px" appendTo="@(body)">

		<p:scrollPanel mode="native" style="max-height:550px">
			<hftl:formPanel formId="scriptForm"
				label="#{messages['customizedEntities.actionScriptHeader']}"
				backingBean="#{scriptInstanceBean}" showFormButtons="false">
				<h:panelGroup rendered="#{scriptInstanceBean.entity.isError()}">
					<div class="ui-messages ui-widget">
						<div class="ui-messages-error ui-corner-all">
							<span class="ui-messages-error-icon"></span>
							<ul>
								<li><h:outputText
										value="#{messages['scriptInstance.compilationFailed']}"
										styleClass="ui-messages-error-summary" /></li>
							</ul>
						</div>
					</div>
				</h:panelGroup>

				<hftl:formField label="#{messages['BusinessEntity.code']}"
					disabled="true" field="code" required="true" allowEdit="false"
					componentWidth="15" />
				<hftl:formField label="#{messages['BusinessEntity.description']}"
					field="description" required="false" componentWidth="15" />
				<hftl:formField label="#{messages['scriptInstance.sourceTypeEnum']}"
					field="sourceTypeEnum" />
				<hftl:decorateFormField fieldId="codeMirror"
					label="#{messages['scriptInstance.script']}" newLine="true"
					componentWidth="100">
					<pe:codeMirror id="codeMirror" theme="eclipse" mode="text/x-java"
						value="#{scriptInstanceBean.entity.script}" lineNumbers="true"
						required="true" />
				</hftl:decorateFormField>
				<hftl:formField label="#{messages['enableEntity.disabled']}"
					doNotShowOnNew="true" allowEdit="false" field="disabled"
					isMessage="true" newLine="true" />

				<h:panelGroup id="scriptErrors"
					rendered="#{scriptInstanceBean.entity.isError()}">
					<hftl:decorateFormField
						label="#{messages['scriptInstance.compilationErrors']}"
						componentWidth="100" newLine="true"
						rendered="#{scriptInstanceBean.entity.isError()}">
						<p:dataTable id="entityScripts" var="entity"
							value="#{scriptInstanceBean.entity.scriptErrors}"
							paginator="true" rows="10" sortBy="#{entity.lineNumber}"
							sortField="lineNumber" paginatorAlwaysVisible="false"
							paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
							rowsPerPageTemplate="10" lazy="false" styleClass="custom-grid"
							reflow="true">
							<hftl:column
								label="#{messages['scriptInstance.compilation.lineNumber']}"
								field="lineNumber" width="10%" />
							<hftl:column
								label="#{messages['scriptInstance.compilation.columnNumber']}"
								field="columnNumber" width="15%" />
							<hftl:column
								label="#{messages['scriptInstance.compilation.message']}"
								field="message" />
						</p:dataTable>
					</hftl:decorateFormField>
				</h:panelGroup>

				<ui:param name="buttons" value="true" />
				<ui:define name="buttons">

					<p:remoteCommand action="#{entityCustomActionBean.refreshScript}"
						name="refreshScript" update=":actionForm:script_entity" />

					<p:commandButton value="#{messages['action.save']}"
						action="#{scriptInstanceBean.saveOrUpdateForPopup}"
						oncomplete="refreshScript(); if (args &amp;&amp; !args.validationFailed) PF('scriptDialog').hide()"
						update="@form :actionForm:messages">
					</p:commandButton>
					<p:commandButton
						value="#{messages['scriptInstance.testCompilation']}"
						action="#{scriptInstanceBean.testCompilation}" update="@form" />
					<p:commandButton value="#{messages['commons.disable']}"
						rendered="#{not empty scriptInstanceBean.entity.id and scriptInstanceBean.entity.active}"
						action="#{scriptInstanceBean.disable}" update="@form">
						<p:confirm header="#{messages['commons.disable']}"
							message="#{messages['commons.confirmDisable']}" />
					</p:commandButton>
					<p:commandButton value="#{messages['commons.enable']}"
						rendered="#{not empty scriptInstanceBean.entity.id and scriptInstanceBean.entity.disabled}"
						action="#{scriptInstanceBean.enable}" update="@form">
						<p:confirm header="#{messages['commons.enable']}"
							message="#{messages['commons.confirmEnable']}" />
					</p:commandButton>

					<p:commandButton value="#{messages['commons.close']}"
						immediate="true" oncomplete="PF('scriptDialog').hide()"
						actionListener="#{entityCustomActionBean.refreshScript}"
						update=":actionForm:messages" />
				</ui:define>
			</hftl:formPanel>
		</p:scrollPanel>
	</p:dialog>
	
	<p:dialog responsive="true" 
		header="Create relationship" 
		id="createRelationshipDialog"
		widgetVar="createRelationshipDialog">
		
		<hftl:decorateFormPanel formId="createCrtForm">
		
			<ui:define name="fields">
				<hftl:decorateFormField fieldId="code" label="Code">
					<p:inputText id="code" size="50" value="#{customFieldTemplateBean.relationshipToCreate.code}"/>
				</hftl:decorateFormField>
				
				<hftl:decorateFormField fieldId="title" label="Title">
					<p:inputText id="title" size="50" value="#{customFieldTemplateBean.relationshipToCreate.name}"/>
				</hftl:decorateFormField>
							
				<hftl:decorateFormField fieldId="unique" label="Unique">
					<p:selectBooleanCheckbox id="unique" value="#{customFieldTemplateBean.relationshipToCreate.unique}"/>
				</hftl:decorateFormField>
			</ui:define>
			
			<ui:param name="buttons" value="true" />
			
			<ui:define name="buttons">
				<p:commandButton value="Create"
					id="submit"
					actionListener="#{customFieldTemplateBean.createRelationsip}" 
					update="cftForm:relationship createCrtForm"
					resetValues="true"
					oncomplete="PF('createRelationshipDialog').hide()">
						<p:resetInput target="createCrtForm" />
				</p:commandButton>
				<p:commandButton value="#{messages['commons.close']}" update="@form"
				 oncomplete="PF('createRelationshipDialog').hide()">
					<p:resetInput target="@form" />
				</p:commandButton>
			</ui:define>
			
		</hftl:decorateFormPanel>
	</p:dialog>

</ui:composition>